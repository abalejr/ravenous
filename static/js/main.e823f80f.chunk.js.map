{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","setState","e","target","value","searchYelp","preventDefault","renderSortByOptions","onChange","placeholder","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","address2","address3","zip_code","categories","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e823f80f.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n    render() {\n        return (\n            <div className=\"Business\">\n                <div className=\"image-container\">\n                    <img src={this.props.business.imageSrc} alt={this.props.business.name} />\n                </div>\n                <h2>{this.props.business.name}</h2>\n                <div className=\"Business-information\">\n                    <div className=\"Business-address\">\n                        <p>{this.props.business.address}</p>\n                        <p>{this.props.business.city}</p>\n                        <p>{this.props.business.state} {this.props.business.zipCode}</p>\n                    </div>\n                    <div className=\"Business-reviews\">\n                        <h3>{this.props.business.category}</h3>\n                        <h3 className=\"rating\">{this.props.business.rating} stars</h3>\n                        <p>{this.props.business.reviewCount} reviews</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Business;\n","import React from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n    render() {\n        return (\n            <div className=\"BusinessList\">\n                {\n                    this.props.businesses.map( business => {\n                        return <Business business={business} key={business.id} />;\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default BusinessList;","import React from 'react';\nimport './SearchBar.css';\n\nconst sortByOptions = {\n    'Best Match': 'best_match',\n    'Highest Rated': 'rating',\n    'Most Reviewed': 'review_count'\n};\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: '',\n            location: '',\n            sortBy: 'best_match'\n        };\n\n        this.handleTermChange = this.handleTermChange.bind(this);\n        this.handleLocationChange = this.handleLocationChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    getSortByClass(sortByOption) {\n        if ( this.state.sortBy === sortByOption ) {\n            return 'active';\n        } else {\n            return '';\n        }\n    }\n\n    renderSortByOptions() {\n        return Object.keys( sortByOptions ).map( sortByOption => {\n            let sortByOptionValue = sortByOptions[ sortByOption ];\n            return <li className={this.getSortByClass( sortByOptionValue )} onClick={this.handleSortByChange.bind(this, sortByOptionValue)} key={sortByOptionValue} >{ sortByOption }</li>\n        });\n    }\n\n    handleSortByChange(sortByOption) {\n        this.setState( { sortBy: sortByOption } );\n    }\n\n    handleTermChange(e) {\n        this.setState( { term: e.target.value } );\n    }\n\n    handleLocationChange(e) {\n        this.setState( { location: e.target.value } );\n    }\n\n    handleSearch(e) {\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n        e.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n            <div className=\"SearchBar-sort-options\">\n                <ul>\n                    { this.renderSortByOptions() }\n                </ul>\n            </div>\n            <div className=\"SearchBar-fields\">\n                <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\n                <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\n            </div>\n            <div className=\"SearchBar-submit\">\n                <a onClick={this.handleSearch}>Let's Go</a>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","const apiKey = 'IIfryINT6bAM7XCyQ940Laqd0Np0M8LJvbDcABtwonwF4ge7odFIJx5jRhmQV4mHohOv-VKmnELNa4jVv78Z1ArEY_VPhkDsbrsaaCkZ0d3uhGjwClK_jN53gFqUXHYx',\r\n      Yelp = {\r\n        search: (term, location, sortBy) => {\r\n            return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${apiKey}`\r\n              }\r\n            }).then( response => {\r\n                return response.json();\r\n            }).then( jsonResponse => {\r\n                if (jsonResponse.businesses) {\r\n                    return jsonResponse.businesses.map( business => {\r\n                        return {\r\n                            id: business.id,\r\n                            imageSrc: business.image_url,\r\n                            name: business.name,\r\n                            address: `${business.location.address1} ${business.location.address2} ${business.location.address3}`,\r\n                            city: business.location.city,\r\n                            state: business.location.state,\r\n                            zipCode: business.location.zip_code,\r\n                            category: business.categories[0]['title'],\r\n                            rating: business.rating,\r\n                            reviewCount: business.review_count\r\n                        };\r\n                    });\r\n                }\r\n            });\r\n        }\r\n};\r\n\r\nexport default Yelp;","import React, { Component } from 'react';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Yelp from './util/Yelp';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { businesses: [] };\n\n        this.searchYelp = this.searchYelp.bind(this);\n    }\n    \n    searchYelp(term, location, sortBy) {\n        Yelp.search( term, location, sortBy\n        ).then( businesses => {\n            this.setState( { businesses: businesses } );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>ravenous</h1>\n                <SearchBar searchYelp={this.searchYelp} />\n                <BusinessList businesses={this.state.businesses} /> \n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}